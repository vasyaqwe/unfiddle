/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as AuthedIndexRouteImport } from './routes/_authed/index'
import { Route as JoinCodeRouteImport } from './routes/join.$code'
import { Route as AuthedNewRouteImport } from './routes/_authed/new'
import { Route as AuthedWorkspaceIdLayoutRouteImport } from './routes/_authed/$workspaceId/_layout'
import { Route as AuthedWorkspaceIdLayoutTeamRouteImport } from './routes/_authed/$workspaceId/_layout/team'
import { Route as AuthedWorkspaceIdLayoutSettingsRouteImport } from './routes/_authed/$workspaceId/_layout/settings'
import { Route as AuthedWorkspaceIdLayoutSearchRouteImport } from './routes/_authed/$workspaceId/_layout/search'
import { Route as AuthedWorkspaceIdLayoutBoardRouteImport } from './routes/_authed/$workspaceId/_layout/board'
import { Route as AuthedWorkspaceIdLayoutAnalyticsRouteImport } from './routes/_authed/$workspaceId/_layout/analytics'
import { Route as AuthedWorkspaceIdLayouthomeIndexRouteImport } from './routes/_authed/$workspaceId/_layout/(home)/index'
import { Route as AuthedWorkspaceIdLayoutorderOrderOrderIdRouteImport } from './routes/_authed/$workspaceId/_layout/(order)/order.$orderId'

const AuthedWorkspaceIdRouteImport = createFileRoute('/_authed/$workspaceId')()

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedWorkspaceIdRoute = AuthedWorkspaceIdRouteImport.update({
  id: '/$workspaceId',
  path: '/$workspaceId',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedIndexRoute = AuthedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedRoute,
} as any)
const JoinCodeRoute = JoinCodeRouteImport.update({
  id: '/join/$code',
  path: '/join/$code',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedNewRoute = AuthedNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedWorkspaceIdLayoutRoute = AuthedWorkspaceIdLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AuthedWorkspaceIdRoute,
} as any)
const AuthedWorkspaceIdLayoutTeamRoute =
  AuthedWorkspaceIdLayoutTeamRouteImport.update({
    id: '/team',
    path: '/team',
    getParentRoute: () => AuthedWorkspaceIdLayoutRoute,
  } as any)
const AuthedWorkspaceIdLayoutSettingsRoute =
  AuthedWorkspaceIdLayoutSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthedWorkspaceIdLayoutRoute,
  } as any)
const AuthedWorkspaceIdLayoutSearchRoute =
  AuthedWorkspaceIdLayoutSearchRouteImport.update({
    id: '/search',
    path: '/search',
    getParentRoute: () => AuthedWorkspaceIdLayoutRoute,
  } as any)
const AuthedWorkspaceIdLayoutBoardRoute =
  AuthedWorkspaceIdLayoutBoardRouteImport.update({
    id: '/board',
    path: '/board',
    getParentRoute: () => AuthedWorkspaceIdLayoutRoute,
  } as any)
const AuthedWorkspaceIdLayoutAnalyticsRoute =
  AuthedWorkspaceIdLayoutAnalyticsRouteImport.update({
    id: '/analytics',
    path: '/analytics',
    getParentRoute: () => AuthedWorkspaceIdLayoutRoute,
  } as any)
const AuthedWorkspaceIdLayouthomeIndexRoute =
  AuthedWorkspaceIdLayouthomeIndexRouteImport.update({
    id: '/(home)/',
    path: '/',
    getParentRoute: () => AuthedWorkspaceIdLayoutRoute,
  } as any)
const AuthedWorkspaceIdLayoutorderOrderOrderIdRoute =
  AuthedWorkspaceIdLayoutorderOrderOrderIdRouteImport.update({
    id: '/(order)/order/$orderId',
    path: '/order/$orderId',
    getParentRoute: () => AuthedWorkspaceIdLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/new': typeof AuthedNewRoute
  '/join/$code': typeof JoinCodeRoute
  '/': typeof AuthedIndexRoute
  '/$workspaceId': typeof AuthedWorkspaceIdLayoutRouteWithChildren
  '/$workspaceId/analytics': typeof AuthedWorkspaceIdLayoutAnalyticsRoute
  '/$workspaceId/board': typeof AuthedWorkspaceIdLayoutBoardRoute
  '/$workspaceId/search': typeof AuthedWorkspaceIdLayoutSearchRoute
  '/$workspaceId/settings': typeof AuthedWorkspaceIdLayoutSettingsRoute
  '/$workspaceId/team': typeof AuthedWorkspaceIdLayoutTeamRoute
  '/$workspaceId/': typeof AuthedWorkspaceIdLayouthomeIndexRoute
  '/$workspaceId/order/$orderId': typeof AuthedWorkspaceIdLayoutorderOrderOrderIdRoute
}
export interface FileRoutesByTo {
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/new': typeof AuthedNewRoute
  '/join/$code': typeof JoinCodeRoute
  '/': typeof AuthedIndexRoute
  '/$workspaceId': typeof AuthedWorkspaceIdLayouthomeIndexRoute
  '/$workspaceId/analytics': typeof AuthedWorkspaceIdLayoutAnalyticsRoute
  '/$workspaceId/board': typeof AuthedWorkspaceIdLayoutBoardRoute
  '/$workspaceId/search': typeof AuthedWorkspaceIdLayoutSearchRoute
  '/$workspaceId/settings': typeof AuthedWorkspaceIdLayoutSettingsRoute
  '/$workspaceId/team': typeof AuthedWorkspaceIdLayoutTeamRoute
  '/$workspaceId/order/$orderId': typeof AuthedWorkspaceIdLayoutorderOrderOrderIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authed': typeof AuthedRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/_authed/new': typeof AuthedNewRoute
  '/join/$code': typeof JoinCodeRoute
  '/_authed/': typeof AuthedIndexRoute
  '/_authed/$workspaceId': typeof AuthedWorkspaceIdRouteWithChildren
  '/_authed/$workspaceId/_layout': typeof AuthedWorkspaceIdLayoutRouteWithChildren
  '/_authed/$workspaceId/_layout/analytics': typeof AuthedWorkspaceIdLayoutAnalyticsRoute
  '/_authed/$workspaceId/_layout/board': typeof AuthedWorkspaceIdLayoutBoardRoute
  '/_authed/$workspaceId/_layout/search': typeof AuthedWorkspaceIdLayoutSearchRoute
  '/_authed/$workspaceId/_layout/settings': typeof AuthedWorkspaceIdLayoutSettingsRoute
  '/_authed/$workspaceId/_layout/team': typeof AuthedWorkspaceIdLayoutTeamRoute
  '/_authed/$workspaceId/_layout/(home)/': typeof AuthedWorkspaceIdLayouthomeIndexRoute
  '/_authed/$workspaceId/_layout/(order)/order/$orderId': typeof AuthedWorkspaceIdLayoutorderOrderOrderIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/new'
    | '/join/$code'
    | '/'
    | '/$workspaceId'
    | '/$workspaceId/analytics'
    | '/$workspaceId/board'
    | '/$workspaceId/search'
    | '/$workspaceId/settings'
    | '/$workspaceId/team'
    | '/$workspaceId/'
    | '/$workspaceId/order/$orderId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/new'
    | '/join/$code'
    | '/'
    | '/$workspaceId'
    | '/$workspaceId/analytics'
    | '/$workspaceId/board'
    | '/$workspaceId/search'
    | '/$workspaceId/settings'
    | '/$workspaceId/team'
    | '/$workspaceId/order/$orderId'
  id:
    | '__root__'
    | '/_authed'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/signup'
    | '/_authed/new'
    | '/join/$code'
    | '/_authed/'
    | '/_authed/$workspaceId'
    | '/_authed/$workspaceId/_layout'
    | '/_authed/$workspaceId/_layout/analytics'
    | '/_authed/$workspaceId/_layout/board'
    | '/_authed/$workspaceId/_layout/search'
    | '/_authed/$workspaceId/_layout/settings'
    | '/_authed/$workspaceId/_layout/team'
    | '/_authed/$workspaceId/_layout/(home)/'
    | '/_authed/$workspaceId/_layout/(order)/order/$orderId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthedRoute: typeof AuthedRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
  JoinCodeRoute: typeof JoinCodeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/$workspaceId': {
      id: '/_authed/$workspaceId'
      path: '/$workspaceId'
      fullPath: '/$workspaceId'
      preLoaderRoute: typeof AuthedWorkspaceIdRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/': {
      id: '/_authed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthedIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/join/$code': {
      id: '/join/$code'
      path: '/join/$code'
      fullPath: '/join/$code'
      preLoaderRoute: typeof JoinCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/new': {
      id: '/_authed/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof AuthedNewRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/$workspaceId/_layout': {
      id: '/_authed/$workspaceId/_layout'
      path: '/$workspaceId'
      fullPath: '/$workspaceId'
      preLoaderRoute: typeof AuthedWorkspaceIdLayoutRouteImport
      parentRoute: typeof AuthedWorkspaceIdRoute
    }
    '/_authed/$workspaceId/_layout/team': {
      id: '/_authed/$workspaceId/_layout/team'
      path: '/team'
      fullPath: '/$workspaceId/team'
      preLoaderRoute: typeof AuthedWorkspaceIdLayoutTeamRouteImport
      parentRoute: typeof AuthedWorkspaceIdLayoutRoute
    }
    '/_authed/$workspaceId/_layout/settings': {
      id: '/_authed/$workspaceId/_layout/settings'
      path: '/settings'
      fullPath: '/$workspaceId/settings'
      preLoaderRoute: typeof AuthedWorkspaceIdLayoutSettingsRouteImport
      parentRoute: typeof AuthedWorkspaceIdLayoutRoute
    }
    '/_authed/$workspaceId/_layout/search': {
      id: '/_authed/$workspaceId/_layout/search'
      path: '/search'
      fullPath: '/$workspaceId/search'
      preLoaderRoute: typeof AuthedWorkspaceIdLayoutSearchRouteImport
      parentRoute: typeof AuthedWorkspaceIdLayoutRoute
    }
    '/_authed/$workspaceId/_layout/board': {
      id: '/_authed/$workspaceId/_layout/board'
      path: '/board'
      fullPath: '/$workspaceId/board'
      preLoaderRoute: typeof AuthedWorkspaceIdLayoutBoardRouteImport
      parentRoute: typeof AuthedWorkspaceIdLayoutRoute
    }
    '/_authed/$workspaceId/_layout/analytics': {
      id: '/_authed/$workspaceId/_layout/analytics'
      path: '/analytics'
      fullPath: '/$workspaceId/analytics'
      preLoaderRoute: typeof AuthedWorkspaceIdLayoutAnalyticsRouteImport
      parentRoute: typeof AuthedWorkspaceIdLayoutRoute
    }
    '/_authed/$workspaceId/_layout/(home)/': {
      id: '/_authed/$workspaceId/_layout/(home)/'
      path: '/'
      fullPath: '/$workspaceId/'
      preLoaderRoute: typeof AuthedWorkspaceIdLayouthomeIndexRouteImport
      parentRoute: typeof AuthedWorkspaceIdLayoutRoute
    }
    '/_authed/$workspaceId/_layout/(order)/order/$orderId': {
      id: '/_authed/$workspaceId/_layout/(order)/order/$orderId'
      path: '/order/$orderId'
      fullPath: '/$workspaceId/order/$orderId'
      preLoaderRoute: typeof AuthedWorkspaceIdLayoutorderOrderOrderIdRouteImport
      parentRoute: typeof AuthedWorkspaceIdLayoutRoute
    }
  }
}

interface AuthedWorkspaceIdLayoutRouteChildren {
  AuthedWorkspaceIdLayoutAnalyticsRoute: typeof AuthedWorkspaceIdLayoutAnalyticsRoute
  AuthedWorkspaceIdLayoutBoardRoute: typeof AuthedWorkspaceIdLayoutBoardRoute
  AuthedWorkspaceIdLayoutSearchRoute: typeof AuthedWorkspaceIdLayoutSearchRoute
  AuthedWorkspaceIdLayoutSettingsRoute: typeof AuthedWorkspaceIdLayoutSettingsRoute
  AuthedWorkspaceIdLayoutTeamRoute: typeof AuthedWorkspaceIdLayoutTeamRoute
  AuthedWorkspaceIdLayouthomeIndexRoute: typeof AuthedWorkspaceIdLayouthomeIndexRoute
  AuthedWorkspaceIdLayoutorderOrderOrderIdRoute: typeof AuthedWorkspaceIdLayoutorderOrderOrderIdRoute
}

const AuthedWorkspaceIdLayoutRouteChildren: AuthedWorkspaceIdLayoutRouteChildren =
  {
    AuthedWorkspaceIdLayoutAnalyticsRoute:
      AuthedWorkspaceIdLayoutAnalyticsRoute,
    AuthedWorkspaceIdLayoutBoardRoute: AuthedWorkspaceIdLayoutBoardRoute,
    AuthedWorkspaceIdLayoutSearchRoute: AuthedWorkspaceIdLayoutSearchRoute,
    AuthedWorkspaceIdLayoutSettingsRoute: AuthedWorkspaceIdLayoutSettingsRoute,
    AuthedWorkspaceIdLayoutTeamRoute: AuthedWorkspaceIdLayoutTeamRoute,
    AuthedWorkspaceIdLayouthomeIndexRoute:
      AuthedWorkspaceIdLayouthomeIndexRoute,
    AuthedWorkspaceIdLayoutorderOrderOrderIdRoute:
      AuthedWorkspaceIdLayoutorderOrderOrderIdRoute,
  }

const AuthedWorkspaceIdLayoutRouteWithChildren =
  AuthedWorkspaceIdLayoutRoute._addFileChildren(
    AuthedWorkspaceIdLayoutRouteChildren,
  )

interface AuthedWorkspaceIdRouteChildren {
  AuthedWorkspaceIdLayoutRoute: typeof AuthedWorkspaceIdLayoutRouteWithChildren
}

const AuthedWorkspaceIdRouteChildren: AuthedWorkspaceIdRouteChildren = {
  AuthedWorkspaceIdLayoutRoute: AuthedWorkspaceIdLayoutRouteWithChildren,
}

const AuthedWorkspaceIdRouteWithChildren =
  AuthedWorkspaceIdRoute._addFileChildren(AuthedWorkspaceIdRouteChildren)

interface AuthedRouteChildren {
  AuthedNewRoute: typeof AuthedNewRoute
  AuthedIndexRoute: typeof AuthedIndexRoute
  AuthedWorkspaceIdRoute: typeof AuthedWorkspaceIdRouteWithChildren
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedNewRoute: AuthedNewRoute,
  AuthedIndexRoute: AuthedIndexRoute,
  AuthedWorkspaceIdRoute: AuthedWorkspaceIdRouteWithChildren,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthedRoute: AuthedRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
  JoinCodeRoute: JoinCodeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
